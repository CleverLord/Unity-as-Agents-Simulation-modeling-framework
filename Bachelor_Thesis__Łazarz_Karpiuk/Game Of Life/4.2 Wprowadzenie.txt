Wprowadzenie - czyli co zostało zrobione.

# O pierwszej klasie symulacji
Pierwszy z naszych projektów to Game Of Life. Uznaliśmy że, mimo iż ta symulacja nie jest do końca agentowa, a bardziej podchodzi pod kategorię automatów komórkowych, jest ona dobrym wprowadzeniem w naszą pracę, ponieważ jest to bardzo popularny model i zakładamy że nasz czytelnik go zna, dzięki czemu możemy skupić się na samych technicznych aspektach, czyli na tym, czym ta praca powinna być.

# O implementacjach Game Of Life
W praktyce są 4 symulacje w tym rozdziale, a każda z nich pokazuje coś innego. 

Pierwsza z nich to najbardziej typowe Game Of Life, zaprogramowane tak jak każdy by się tego spodziewał. Tablica dwuwymiarowa z aktualnym stanem planszy, druga tablica obok ze stanem następnym, i do tego pętla wyznaczająca przyszły stan komórki. Została ona stworzona aby pokazać jak wygląda prosta przykładowa realizacja tego zagadnienia w Unity.

Następna symulacja jest nieco zmodyfikowana. Nazywamy ją wersją o podwójnym buforowaniu, ponieważ przy jej tworzeniu, zarządzanie pamięcią, a dokładniej poprawne przełączanie między dwiema flagami, było zasadniczą trudnością. Symulacja ta jest w pełni agentowa z punktu widzenia naszego narzędzia, ponieważ nie ma jednej, centralnie sterującej pętli, a zamiast tego jest skrypt ze zdefiniowaną funkcją przejścia, którego instancja jest na każdym agencie i samo Unity woła na nich funkcję aktualizującą ich stany.

Ostatnie dwie są skupione na wydajności. Dla przejrzystości rozdzieliliśmy kod pracujący na CPU od tego na GPU, szczególnie iż do wersji na procesorze dodaliśmy parę linijek rozszerzających kod o pewne funkcjonalności przydatne ogólnie przy modelowaniu agentowym.